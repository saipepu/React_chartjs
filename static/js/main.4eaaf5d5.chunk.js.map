{"version":3,"sources":["components/chart.js","App.js","index.js"],"names":["ChartComponent","useState","name","age","gender","initialData","setInitialData","console","log","youngAdult","adult","seniors","numberOfMale","numberOfFemale","map","data","index","dataForBarChart","chartData","labels","datasets","label","backgroundColor","dataForPieChart","inputname","setInputName","inputage","setInputAge","inputgender","setInputGender","className","style","display","flexDirection","justifyContent","alignItems","Table","marginTop","marginBottom","width","height","TableHead","TableRow","title","TableCell","TableBody","onSubmit","e","preventDefault","length","id","onChange","target","value","trim","type","placeholder","padding","App","basename","process","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4eaaf5d5.chunk.js","sourcesContent":["import React,{ useState} from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\nimport { Chart } from 'chart.js/auto';\nimport { Table, TableBody, TableHead ,TableRow, TableCell} from '@material-ui/core';\nimport './chart.css'\n\nconst ChartComponent = () => {\n\n\n    let firstValue = [\n        {name: \"Rubi\",age: 31,gender: \"F\"},\n        {name: \"Randy\",age: 32,gender: \"M\"},\n        {name: \"Apple\",age: 18,gender: \"F\"},\n        {name: \"Mango\",age: 14,gender: \"F\"},\n        {name: \"Ferry\",age: 37,gender: \"M\"},\n        {name: \"Johnson\",age: 55,gender: \"M\"},\n        {name: \"Larry\",age: 45,gender: \"M\"},\n        {name: \"Ryne\",age: 12,gender: \"F\"},\n        {name: \"Christopher\",age: 24,gender: \"M\"}\n    ]\n    const [initialData, setInitialData] = useState(firstValue)\n    // initialData[initialData.length] = { name: \"new\",age: 2,gender: \"M\"}\n    console.log(initialData)\n    let youngAdult = 0;\n    let adult = 0;\n    let seniors = 0;\n    let numberOfMale =0;\n    let numberOfFemale = 0;\n\n\n    initialData?.map((data,index) => {\n        return(\n            data.age <= 35 ? youngAdult++ : data.age >= 36 && data.age<=50 ? adult++ : seniors++,\n            data.gender === \"M\" ? numberOfMale++ : numberOfFemale++\n    )\n    })\n\n\n    const dataForBarChart = {\n        chartData: {\n                labels: ['young adult','adult','seniors'],\n                datasets: [\n                    {\n                        label: 'number of people according to AGE',\n                        data: [\n                            youngAdult,adult,seniors\n                        ],\n                        backgroundColor: [\n                            'rgba(75, 192, 192, 0.4)',\n                            'rgba(153, 102, 255, 0.4)',\n                            'rgba(255, 159, 64, 0.4)',\n                        ]\n                    }\n                ]\n        }\n    }\n\n\n    const dataForPieChart = {\n        chartData: {\n            labels: ['Male','Female'],\n            datasets: [\n                {\n                    label: 'Ratio of M and F',\n                    data: [\n                        numberOfMale,numberOfFemale\n                    ],\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                    ]\n                }\n            ]\n        }\n    }\n    const [ inputname, setInputName ] = useState('')\n    const [ inputage, setInputAge ] = useState('')\n    const [ inputgender, setInputGender ] = useState('')\n    const nameOnchange = (e) => {\n        setInputName(e.target.value.trim())\n    }\n    const ageOnchange = (e) => {\n        setInputAge(e.target.value.trim())\n    }\n    const genderOnChange = (e) => {\n        setInputGender(e.target.value.trim())\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputname && inputage && inputgender){\n            console.log('hi')\n            initialData[initialData.length] = {name: inputname, age: inputage, gender: inputgender}\n            console.log(initialData)\n        }\n        setInitialData(initialData)\n        console.log(initialData)\n        setInputName('')\n        setInputAge('')\n        setInputGender('')\n    }\n\n    return(\n        <>\n        <div className=\"chartPage-container\" style={{display: \"flex\",flexDirection: \"column\",justifyContent: \"center\",alignItems: \"center\"}}>\n        <Table aria-label=\"simple table\" style={{marginTop: \"1em\",marginBottom: \"2em\",width: \"500px\",height: \"500px\"}}>\n            <TableHead>\n                <TableRow>\n                    {[\"ID\",\"Name\",\"Age\",\"Gender\"].map((title,index) => (\n                        <TableCell key={index}>\n                            {title}\n                        </TableCell>\n                    ))}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                    {initialData?.map((data,index) => {\n                        return(\n                            <TableRow key={index}>\n                                <TableCell>\n                                    {index}\n                                </TableCell>\n                                <TableCell>\n                                    {data.name}\n                                </TableCell>\n                                <TableCell>\n                                    {data.age}\n                                </TableCell>\n                                <TableCell>\n                                    {data.gender}\n                                </TableCell>\n                            </TableRow>\n                        )\n                    })}\n            </TableBody>\n        </Table>\n        <form onSubmit={handleSubmit} className=\"form-container\">\n            <label id=\"name\">Enter Name</label>\n                <input className=\"nameInput\" onChange={nameOnchange} type=\"text\" value={inputname}></input>\n            <label id=\"age\">Enter Age</label>\n                <input className=\"ageInput\" onChange={ageOnchange} type=\"number\" value={inputage}></input>\n            <label id=\"gender\">Enter Gender</label>\n                <input className=\"genderInput\" onChange={genderOnChange} placeholder=\"M/F\" type=\"text\" value={inputgender}></input>\n            <button type=\"submit\">Add New Data</button>\n        </form>\n        <div className=\"chart\" style={{height: \"500px\",width: \"60vw\",display: \"flex\",flexDirection:\"column\",alignItems: \"center\", padding: \"0px 50px\"}}>\n            <Bar data={dataForBarChart.chartData}/>\n            <Pie data={dataForPieChart.chartData}/>\n        </div>\n        </div>\n\n        </>\n    )\n\n}\nexport default ChartComponent;\n            // {/* <Pie data={data}\n            //     options={{\n            //         title:{\n            //             display: true,\n            //             text: 'Largest City',\n            //             fontSize: 25,\n            //         },\n            //         legend:{\n            //             display: true,\n            //             position: 'right',\n            //         }\n            //     }}\n                // /> */}\n                // const initialChart = {\n                //     chartData: {\n                //         labels: ['1','2','3','4','5','6'],\n                //         datasets:[\n                //             {\n                //                 label:'Population',\n                //                 data:[\n                //                     101,\n                //                     102,\n                //                     10,\n                //                     104,\n                //                     105,\n                //                     106,\n                //                 ],\n                //                 backgroundColor:[\n                //                     'rgba(255, 99, 132, 0.2)',\n                //                     'rgba(54, 162, 235, 0.2)',\n                //                     'rgba(255, 206, 86, 0.2)',\n                //                     'rgba(75, 192, 192, 0.2)',\n                //                     'rgba(153, 102, 255, 0.2)',\n                //                     'rgba(255, 159, 64, 0.2)',\n                //                 ]\n                //             }\n                //         ],\n            \n                //     }\n                // }\n                // const [data,setData ] = useState(initialChart.chartData)","import React from 'react';\nimport ChartComponent from './components/chart';\nimport { BrowserRouter as Routes ,Switch, Route} from 'react-router-dom';\n\n\nconst App = () => {\n\n    return(\n        <>\n        <Routes basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path=\"/\" exact component={ChartComponent}/>\n            </Switch>\n        </Routes>\n\n        </>\n    )\n}\nexport default App;","import React from 'react';\nimport './index.css'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />,document.getElementById(\"root\"))"],"sourceRoot":""}